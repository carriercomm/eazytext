h2. Packaging and distribution

h3. To build

{{{ Code bash

  python setup.py build

}}}


h3. To egg-package

{{{ Code bash

  ./bin/pkg.py egg

}}}

The .egg package will be availabe under dist/ directory


h3. To check and upload into pypi

Simulate egg packaging, installation and usage.

{{{ Code bash

  ./bin/cleanzwiki.sh
  ./bin/pkg.py check

}}}

Finally, Build the egg and upload it into pypi

{{{ Code bash

  python ./setup.py bdist_egg --exclude-source-files register upload --show-response 

}}}


h2. Installation

The latest wiki package will be available in python package index under the
name, ''zwiki-zeta'', install it, into your system or into virtual-environment
by,

{{{ Code bash

  easy_install -Z -U zwiki-zeta

}}}

The reason for installing it in un-zipped form is to make use of the command
line tool.

h3. Command line usage

Make sure that zwiki package is installed for your environment (using
easy_install) or available via //PYTHONPATH//.
''zwiki/zwcmd.py'' script under zwiki-package can be used as command line
tool. Either invoke it from its original path, or create a symbolic link to a
bin/ directory.

script-file:    <site-package>/zwiki/zwcmd.py

symbolic link to your binary path, like,

{{{ Code bash

    ln -s <site-package>/zwiki/zwcmd.py $(HOME)/bin/zwcmd.py
    # or,
    ln -s <site-package>/zwiki/zwcmd.py /usr/bin/zwcmd.py

}}}

Once `zwcmd.py` is available as an executable command and `zwiki` module 
in your python path, use the command-line tool, like,

{{{ Code bash

zwcmd.py <wiki-file>

}}}

A corresponding `.html` file will be created under the same directory.
   
h3. Using it as library

{{{ Code python

    from   zwiki.zwparser import ZWParser

    zwparser = ZWParser( obfuscatemail=True )
    wikitext = open( file ).read()      # Read text written using wiki-markup
    tu       = zwparser.parse( wikitext, debuglevel=0 )
    html     = tu.tohtml()              # HTML text

}}}
  
/* vim: set filetype=zwiki : */
