Track the project at,
    http://eazytext.pluggdapps.com

* Mailing list for EazyText, use pluggdapps-discuss for now.
* CSS skin class names should be more unique.
* eztext.py automatic script generation via easy_install.
* Launchpad-eazytext project details have several links to external sites
  related to eazytext, fill them up.

----
* Re-design the engine on stack-machine concept.
* Address() extension to generate <address> tag with author's address.
* Wrap the translated html text inside <article> tag.
* Markup syntax for <aside> tag,
    << ... << for left aside
    >> ... >> for right aside
* Markup syntax for <q> tag,
    """ quotable quotes ... """
* Link markup should have syntax to generate the <del> element, eg,
    [[ -url | text ]]
* Markup syntax to generate <details> <summary> tags.
* Use figure and figure-caption for images, code etc ...
* Macro for <audio> element.
* Extension for <header> element.
* Syntax for grouping headers via <hgroup> element.
* Syntax to generate <mark> element
* Syntax to attach value to <li> element for ordered list.
* Support nested link markup for <nav> element, like,
    [[ [[ /pref.html | pref ]] [[ /pref.html | pref ]] ]]
* Enclose TOC generated output links within <nav> element.
* Syntax to generate <small> element.
* Syntax to generate the <wbr> element.
* From html text to eazytext markup.
* Optionally enable ${ expression evaluation } feature.
* Implement `stripscript` 
* Find a way to pass the body arguments programatically via Translator()

* Explore the possible addition of `indentation` feature, like,
    :some text          < one level indentation >
    ::some text         < two level indentation >
  while the indentation offset is configurable in the wiki style.
  NOTE : indentation is not a feature of html. But can/should be achieved via CSS
* Support merging table cells like (refer wiki-dot).
* Printable pages.
* Should we add the concept of variables and namespace ?
* Check out http://meta.wikimedia.org/wiki/Help:Variable and add them as
  macros
* For Toc() macro add numbering feature.
* Math Macro (and extensions).
* Include macro to include pages from another wiki page.
* Social bookmarking.
* Flash support.
* When an ENDMARKER is detected by any grammar other than `wikipage`, it
  can be indicated to the user, via translated HTML.
* While documenting the wiki, also document the original wiki texts that
  gets consumed by wiki parsing and html translation.
